apiVersion: apps/v1
kind: Deployment
metadata:
  name: typebot-builder
  labels:
    app: typebot-builder
    tags.datadoghq.com/env: production
    tags.datadoghq.com/service: typebot-builder
    tags.datadoghq.com/version: '${APP_VERSION}'
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: typebot-builder
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: typebot-builder
        tags.datadoghq.com/env: production
        tags.datadoghq.com/service: typebot-builder
        tags.datadoghq.com/version: '${APP_VERSION}'
        admission.datadoghq.com/enabled: 'true'
      annotations:
        admission.datadoghq.com/js-lib.version: v5.24.0
        admission.datadoghq.com/typebot-builder.logs: '[{"source":"nodejs","service":"typebot-builder","log_processing_rules":[{"type":"multi_line","name":"no_multiline","pattern":".*"}]}]'
    spec:
      containers:
        - name: typebot-builder
          env:
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_PROFILING_ENABLED
              value: 'true'
            - name: DD_LOGS_INJECTION
              value: 'true'
            - name: DD_LOGS_ENABLED
              value: 'true'
            - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
              value: 'true'
            - name: DD_ENV
              value: 'production'
            - name: DD_SERVICE
              value: 'typebot-builder'
            - name: DD_VERSION
              value: '${APP_VERSION}'
          envFrom:
            - configMapRef:
                name: typebot-builder
            - secretRef:
                name: typebot-builder
          image: typebot-builder-image
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 300m
              memory: 2Gi
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 100
            periodSeconds: 20
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3000
            periodSeconds: 20
            timeoutSeconds: 3
            successThreshold: 2
            initialDelaySeconds: 35
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
