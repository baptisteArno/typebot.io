---
alwaysApply: true
---

## Environment

- Always use `bun` as the package manager

## Coding

- Never use `any` type. Always use proper TypeScript types, interfaces, or union types instead.
- Use `satisfies` instead of `as` when possible to make sure we keep strong type-safety.
- Prefer writing long and complex functions that provide good, deep abstraction. These functions should have a TSDoc comment description of what it does in great details. Avoid providing `@param` description, params name should be self-explanatory. IMPORTANT: Only add inline comments if a piece of logic is hard to understand, it should ideally explain what happens in the next N lines of code, never add a comment to explain a single line.
- Prefer infer the return type of a function instead of declaring it.
- Helper functions should be placed at the bottom of the file.

## Testing

- Use `bun run test` to run the unit test script (which executes `vitest run`)
- We test only complexe and critical functions
- We never use Vitest mocks. We almost always want to modify the function signature to have dependencies as arguments instead.
