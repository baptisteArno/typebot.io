/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TermsOfServiceImport } from './routes/terms-of-service'
import { Route as PrivacyPolicyImport } from './routes/privacy-policy'
import { Route as PricingImport } from './routes/pricing'
import { Route as OssFriendsImport } from './routes/oss-friends'
import { Route as BlogImport } from './routes/blog'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TermsOfServiceRoute = TermsOfServiceImport.update({
  id: '/terms-of-service',
  path: '/terms-of-service',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyPolicyRoute = PrivacyPolicyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any)

const PricingRoute = PricingImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const OssFriendsRoute = OssFriendsImport.update({
  id: '/oss-friends',
  path: '/oss-friends',
  getParentRoute: () => rootRoute,
} as any)

const BlogRoute = BlogImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogImport
      parentRoute: typeof rootRoute
    }
    '/oss-friends': {
      id: '/oss-friends'
      path: '/oss-friends'
      fullPath: '/oss-friends'
      preLoaderRoute: typeof OssFriendsImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/terms-of-service': {
      id: '/terms-of-service'
      path: '/terms-of-service'
      fullPath: '/terms-of-service'
      preLoaderRoute: typeof TermsOfServiceImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/oss-friends': typeof OssFriendsRoute
  '/pricing': typeof PricingRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/terms-of-service': typeof TermsOfServiceRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/oss-friends': typeof OssFriendsRoute
  '/pricing': typeof PricingRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/terms-of-service': typeof TermsOfServiceRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/oss-friends': typeof OssFriendsRoute
  '/pricing': typeof PricingRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/terms-of-service': typeof TermsOfServiceRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/blog'
    | '/oss-friends'
    | '/pricing'
    | '/privacy-policy'
    | '/terms-of-service'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/blog'
    | '/oss-friends'
    | '/pricing'
    | '/privacy-policy'
    | '/terms-of-service'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/blog'
    | '/oss-friends'
    | '/pricing'
    | '/privacy-policy'
    | '/terms-of-service'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  BlogRoute: typeof BlogRoute
  OssFriendsRoute: typeof OssFriendsRoute
  PricingRoute: typeof PricingRoute
  PrivacyPolicyRoute: typeof PrivacyPolicyRoute
  TermsOfServiceRoute: typeof TermsOfServiceRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  BlogRoute: BlogRoute,
  OssFriendsRoute: OssFriendsRoute,
  PricingRoute: PricingRoute,
  PrivacyPolicyRoute: PrivacyPolicyRoute,
  TermsOfServiceRoute: TermsOfServiceRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/blog",
        "/oss-friends",
        "/pricing",
        "/privacy-policy",
        "/terms-of-service"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/blog": {
      "filePath": "blog.tsx"
    },
    "/oss-friends": {
      "filePath": "oss-friends.tsx"
    },
    "/pricing": {
      "filePath": "pricing.tsx"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.tsx"
    },
    "/terms-of-service": {
      "filePath": "terms-of-service.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
