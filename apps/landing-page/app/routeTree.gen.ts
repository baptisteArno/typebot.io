/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutPricingImport } from './routes/_layout/pricing'
import { Route as LayoutOssFriendsImport } from './routes/_layout/oss-friends'
import { Route as LayoutAboutImport } from './routes/_layout/about'
import { Route as LayoutSlugImport } from './routes/_layout/$slug'
import { Route as LayoutBlogIndexImport } from './routes/_layout/blog/index'
import { Route as LayoutBlogSlugImport } from './routes/_layout/blog/$slug'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutPricingRoute = LayoutPricingImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutOssFriendsRoute = LayoutOssFriendsImport.update({
  id: '/oss-friends',
  path: '/oss-friends',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAboutRoute = LayoutAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSlugRoute = LayoutSlugImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBlogIndexRoute = LayoutBlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBlogSlugRoute = LayoutBlogSlugImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/$slug': {
      id: '/_layout/$slug'
      path: '/$slug'
      fullPath: '/$slug'
      preLoaderRoute: typeof LayoutSlugImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/oss-friends': {
      id: '/_layout/oss-friends'
      path: '/oss-friends'
      fullPath: '/oss-friends'
      preLoaderRoute: typeof LayoutOssFriendsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/pricing': {
      id: '/_layout/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof LayoutPricingImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/blog/$slug': {
      id: '/_layout/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof LayoutBlogSlugImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/blog/': {
      id: '/_layout/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof LayoutBlogIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutSlugRoute: typeof LayoutSlugRoute
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutOssFriendsRoute: typeof LayoutOssFriendsRoute
  LayoutPricingRoute: typeof LayoutPricingRoute
  LayoutBlogSlugRoute: typeof LayoutBlogSlugRoute
  LayoutBlogIndexRoute: typeof LayoutBlogIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutSlugRoute: LayoutSlugRoute,
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutOssFriendsRoute: LayoutOssFriendsRoute,
  LayoutPricingRoute: LayoutPricingRoute,
  LayoutBlogSlugRoute: LayoutBlogSlugRoute,
  LayoutBlogIndexRoute: LayoutBlogIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/$slug': typeof LayoutSlugRoute
  '/about': typeof LayoutAboutRoute
  '/oss-friends': typeof LayoutOssFriendsRoute
  '/pricing': typeof LayoutPricingRoute
  '/blog/$slug': typeof LayoutBlogSlugRoute
  '/blog': typeof LayoutBlogIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/$slug': typeof LayoutSlugRoute
  '/about': typeof LayoutAboutRoute
  '/oss-friends': typeof LayoutOssFriendsRoute
  '/pricing': typeof LayoutPricingRoute
  '/blog/$slug': typeof LayoutBlogSlugRoute
  '/blog': typeof LayoutBlogIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/$slug': typeof LayoutSlugRoute
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/oss-friends': typeof LayoutOssFriendsRoute
  '/_layout/pricing': typeof LayoutPricingRoute
  '/_layout/blog/$slug': typeof LayoutBlogSlugRoute
  '/_layout/blog/': typeof LayoutBlogIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/$slug'
    | '/about'
    | '/oss-friends'
    | '/pricing'
    | '/blog/$slug'
    | '/blog'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/$slug'
    | '/about'
    | '/oss-friends'
    | '/pricing'
    | '/blog/$slug'
    | '/blog'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/$slug'
    | '/_layout/about'
    | '/_layout/oss-friends'
    | '/_layout/pricing'
    | '/_layout/blog/$slug'
    | '/_layout/blog/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/$slug",
        "/_layout/about",
        "/_layout/oss-friends",
        "/_layout/pricing",
        "/_layout/blog/$slug",
        "/_layout/blog/"
      ]
    },
    "/_layout/$slug": {
      "filePath": "_layout/$slug.tsx",
      "parent": "/_layout"
    },
    "/_layout/about": {
      "filePath": "_layout/about.tsx",
      "parent": "/_layout"
    },
    "/_layout/oss-friends": {
      "filePath": "_layout/oss-friends.tsx",
      "parent": "/_layout"
    },
    "/_layout/pricing": {
      "filePath": "_layout/pricing.tsx",
      "parent": "/_layout"
    },
    "/_layout/blog/$slug": {
      "filePath": "_layout/blog/$slug.tsx",
      "parent": "/_layout"
    },
    "/_layout/blog/": {
      "filePath": "_layout/blog/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
