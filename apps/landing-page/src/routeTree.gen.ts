/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LayoutPricingRouteImport } from './routes/_layout/pricing'
import { Route as LayoutOssFriendsRouteImport } from './routes/_layout/oss-friends'
import { Route as LayoutAboutRouteImport } from './routes/_layout/about'
import { Route as LayoutSlugRouteImport } from './routes/_layout/$slug'
import { Route as LayoutBlogIndexRouteImport } from './routes/_layout/blog/index'
import { Route as LayoutBlogSlugRouteImport } from './routes/_layout/blog/$slug'
import { ServerRoute as ApiHealthzServerRouteImport } from './routes/api/healthz'

const rootServerRouteImport = createServerRootRoute()

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutPricingRoute = LayoutPricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutOssFriendsRoute = LayoutOssFriendsRouteImport.update({
  id: '/oss-friends',
  path: '/oss-friends',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAboutRoute = LayoutAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSlugRoute = LayoutSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutBlogIndexRoute = LayoutBlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutBlogSlugRoute = LayoutBlogSlugRouteImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => LayoutRoute,
} as any)
const ApiHealthzServerRoute = ApiHealthzServerRouteImport.update({
  id: '/api/healthz',
  path: '/api/healthz',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$slug': typeof LayoutSlugRoute
  '/about': typeof LayoutAboutRoute
  '/oss-friends': typeof LayoutOssFriendsRoute
  '/pricing': typeof LayoutPricingRoute
  '/blog/$slug': typeof LayoutBlogSlugRoute
  '/blog': typeof LayoutBlogIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$slug': typeof LayoutSlugRoute
  '/about': typeof LayoutAboutRoute
  '/oss-friends': typeof LayoutOssFriendsRoute
  '/pricing': typeof LayoutPricingRoute
  '/blog/$slug': typeof LayoutBlogSlugRoute
  '/blog': typeof LayoutBlogIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/$slug': typeof LayoutSlugRoute
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/oss-friends': typeof LayoutOssFriendsRoute
  '/_layout/pricing': typeof LayoutPricingRoute
  '/_layout/blog/$slug': typeof LayoutBlogSlugRoute
  '/_layout/blog/': typeof LayoutBlogIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$slug'
    | '/about'
    | '/oss-friends'
    | '/pricing'
    | '/blog/$slug'
    | '/blog'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$slug'
    | '/about'
    | '/oss-friends'
    | '/pricing'
    | '/blog/$slug'
    | '/blog'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/$slug'
    | '/_layout/about'
    | '/_layout/oss-friends'
    | '/_layout/pricing'
    | '/_layout/blog/$slug'
    | '/_layout/blog/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/healthz': typeof ApiHealthzServerRoute
}
export interface FileServerRoutesByTo {
  '/api/healthz': typeof ApiHealthzServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/healthz': typeof ApiHealthzServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/healthz'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/healthz'
  id: '__root__' | '/api/healthz'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiHealthzServerRoute: typeof ApiHealthzServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/pricing': {
      id: '/_layout/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof LayoutPricingRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/oss-friends': {
      id: '/_layout/oss-friends'
      path: '/oss-friends'
      fullPath: '/oss-friends'
      preLoaderRoute: typeof LayoutOssFriendsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$slug': {
      id: '/_layout/$slug'
      path: '/$slug'
      fullPath: '/$slug'
      preLoaderRoute: typeof LayoutSlugRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/blog/': {
      id: '/_layout/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof LayoutBlogIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/blog/$slug': {
      id: '/_layout/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof LayoutBlogSlugRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/healthz': {
      id: '/api/healthz'
      path: '/api/healthz'
      fullPath: '/api/healthz'
      preLoaderRoute: typeof ApiHealthzServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface LayoutRouteChildren {
  LayoutSlugRoute: typeof LayoutSlugRoute
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutOssFriendsRoute: typeof LayoutOssFriendsRoute
  LayoutPricingRoute: typeof LayoutPricingRoute
  LayoutBlogSlugRoute: typeof LayoutBlogSlugRoute
  LayoutBlogIndexRoute: typeof LayoutBlogIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutSlugRoute: LayoutSlugRoute,
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutOssFriendsRoute: LayoutOssFriendsRoute,
  LayoutPricingRoute: LayoutPricingRoute,
  LayoutBlogSlugRoute: LayoutBlogSlugRoute,
  LayoutBlogIndexRoute: LayoutBlogIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiHealthzServerRoute: ApiHealthzServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
